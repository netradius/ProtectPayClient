package com.netradius.protectpay;

import java.io.Serializable;
import java.util.Set;
import javax.validation.ConstraintViolation;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;
import javax.validation.constraints.Size;

/**
 * Holds payer details.
 *
 * @author Erik R. Jensen
 */
public class ProtectPayPayer implements Serializable {

  private static final long serialVersionUID = -4995464451681457712L;

  @Size(max = 16)
  private String payerAccountId;

  @Size(max = 100)
  private String emailAddress;

  @Size(max = 50)
  private String externalId1;

  @Size(max = 50)
  private String externalId2;

  @Size(max = 50)
  private String accountName;

  /**
   * Returns the payer account ID. This is the account ID generated by ProtectPay.
   *
   * @return the payer account ID
   */
  public String getPayerAccountId() {
    return payerAccountId;
  }

  /**
   * Sets the payer account ID. This is the account ID generated by ProtectPay.
   *
   * @param payerAccountId the payer account ID
   */
  public void setPayerAccountId(String payerAccountId) {
    this.payerAccountId = payerAccountId;
  }

  /**
   * Please note that this field was added for completeness. ProtectPay currently allows you to
   * save this value, but does not provide a way to retrieve it or search with it through GetPayers
   * making it more or less useless. The maximum size is 100 characters.
   *
   * @return the email address of the payer
   */
  public String getEmailAddress() {
    return emailAddress;
  }

  /**
   * Please note that this field was added for completeness. ProtectPay currently allows you to
   * save this value, but does not provide a way to retrieve it or search with it through GetPayers
   * making it more or less useless. The maximum size is 100 characters.
   *
   * @param emailAddress the email address of the payer
   */
  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  /**
   * Returns the first external ID of the payer.
   *
   * @return the first external ID
   */
  public String getExternalId1() {
    return externalId1;
  }

  /**
   * Sets the first external ID of the payer. Max length of this field is 50.
   *
   * @param externalId1 the first external ID
   */
  public void setExternalId1(String externalId1) {
    this.externalId1 = externalId1;
  }

  /**
   * Returns the second external ID of the payer.
   *
   * @return the second external ID
   */
  public String getExternalId2() {
    return externalId2;
  }

  /**
   * Sets the second external ID of the payer. Max length of this field is 50.
   *
   * @param externalId2 the second external ID
   */
  public void setExternalId2(String externalId2) {
    this.externalId2 = externalId2;
  }

  /**
   * Returns the account name.
   *
   * @return the account name
   */
  public String getAccountName() {
    return accountName;
  }

  /**
   * Sets the account name. This is the main identifier for this payer.
   *
   * @param accountName the account name
   */
  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  @Override
  public String toString() {
    return "Payer{"
        + "payerAccountId='" + payerAccountId + '\''
        + ", emailAddress='" + emailAddress + '\''
        + ", externalId1='" + externalId1 + '\''
        + ", externalId2='" + externalId2 + '\''
        + ", accountName='" + accountName + '\''
        + '}';
  }

  /**
   * Performs JSR 303 validation on the object.
   *
   * @return constraint violations
   */
  public Set<ConstraintViolation<ProtectPayPayer>> validate() {
    ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
    Validator validator = factory.getValidator();
    return validator.validate(this, getClass());
  }
}
